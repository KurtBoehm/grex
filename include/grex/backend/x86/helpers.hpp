// This file is part of https://github.com/KurtBoehm/grex.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

#ifndef INCLUDE_GREX_BACKEND_X86_OPERATIONS_HELPERS_HPP
#define INCLUDE_GREX_BACKEND_X86_OPERATIONS_HELPERS_HPP

#include "grex/backend/x86/instruction-sets.hpp"

#define GREX_NOOP(...)
#define GREX_IDENTITY(X) X
#define GREX_APPLY(MACRO, ...) MACRO(__VA_ARGS__)

#define GREX_FP_SUFFIX_f32 ps
#define GREX_FP_SUFFIX_f64 pd
#define GREX_FP_SUFFIX(TYPE) GREX_FP_SUFFIX_##TYPE

#define GREX_SI_SUFFIX_f(BITS, REGISTERBITS) GREX_FP_SUFFIX(f##BITS)
#define GREX_SI_SUFFIX_i(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_SI_SUFFIX_u(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_SI_SUFFIX(PREFIX, BITS, REGISTERBITS) GREX_SI_SUFFIX_##PREFIX(BITS, REGISTERBITS)

#define GREX_EPI_SUFFIX_f(BITS) GREX_FP_SUFFIX(f##BITS)
#define GREX_EPI_SUFFIX_i(BITS) epi##BITS
#define GREX_EPI_SUFFIX_u(BITS) epi##BITS
#define GREX_EPI_SUFFIX(PREFIX, BITS) GREX_EPI_SUFFIX_##PREFIX(BITS)

#define GREX_ELEMENTS_128_8 16
#define GREX_ELEMENTS_128_16 8
#define GREX_ELEMENTS_128_32 4
#define GREX_ELEMENTS_128_64 2
#define GREX_ELEMENTS_256_8 32
#define GREX_ELEMENTS_256_16 16
#define GREX_ELEMENTS_256_32 8
#define GREX_ELEMENTS_256_64 4
#define GREX_ELEMENTS_512_8 64
#define GREX_ELEMENTS_512_16 32
#define GREX_ELEMENTS_512_32 16
#define GREX_ELEMENTS_512_64 8
#define GREX_ELEMENTS(REGISTERBITS, ELEMENTBITS) GREX_ELEMENTS_##REGISTERBITS##_##ELEMENTBITS

#define GREX_BITPREFIX_128 mm
#define GREX_BITPREFIX_256 mm256
#define GREX_BITPREFIX_512 mm512
#define GREX_BITPREFIX(REGISTERBITS) GREX_BITPREFIX_512_##REGISTERBITS

#define GREX_BITREGISTER_128 __m128
#define GREX_BITREGISTER_256 __m256
#define GREX_BITREGISTER_512 __m512
#define GREX_BITREGISTER(BITS) GREX_BITREGISTER_##BITS

#define GREX_FOREACH_TYPE(MACRO, REGISTERBITS, ...) \
  MACRO(f, 32, GREX_ELEMENTS(REGISTERBITS, 32) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(f, 64, GREX_ELEMENTS(REGISTERBITS, 64) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(u, 8, GREX_ELEMENTS(REGISTERBITS, 8) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(i, 8, GREX_ELEMENTS(REGISTERBITS, 8) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(u, 16, GREX_ELEMENTS(REGISTERBITS, 16) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(i, 16, GREX_ELEMENTS(REGISTERBITS, 16) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(u, 32, GREX_ELEMENTS(REGISTERBITS, 32) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(i, 32, GREX_ELEMENTS(REGISTERBITS, 32) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(u, 64, GREX_ELEMENTS(REGISTERBITS, 64) __VA_OPT__(, ) __VA_ARGS__) \
  MACRO(i, 64, GREX_ELEMENTS(REGISTERBITS, 64) __VA_OPT__(, ) __VA_ARGS__)

#if GREX_X86_64_LEVEL >= 4
#define GREX_FOREACH_X86_64_LEVEL(MACRO) \
  MACRO(128, mm) \
  MACRO(256, mm256) \
  MACRO(512, mm512)
#elif GREX_X86_64_LEVEL >= 3
#define GREX_FOREACH_X86_64_LEVEL(MACRO) \
  MACRO(128, mm) \
  MACRO(256, mm256)
#else
#define GREX_FOREACH_X86_64_LEVEL(MACRO) MACRO(128, mm)
#endif

#endif // INCLUDE_GREX_BACKEND_X86_OPERATIONS_HELPERS_HPP
