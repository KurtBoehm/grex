// This file is part of https://github.com/KurtBoehm/grex.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

#ifndef INCLUDE_GREX_BACKEND_X86_MACROS_INTRINSICS_HPP
#define INCLUDE_GREX_BACKEND_X86_MACROS_INTRINSICS_HPP

#include "grex/backend/x86/macros/base.hpp"
#include "grex/backend/x86/macros/math.hpp"

// Components used in various intrinsics (maths-related components are in math.hpp)

#define GREX_FP_LETTER_32 s
#define GREX_FP_LETTER_64 d
#define GREX_FP_LETTER(BITS) GREX_FP_LETTER_##BITS
#define GREX_FP_SUFFIX(BITS) GREX_CAT(p, GREX_FP_LETTER_##BITS)

#define GREX_REGISTER_LETTER_f f
#define GREX_REGISTER_LETTER_i i
#define GREX_REGISTER_LETTER_u i
#define GREX_REGISTER_LETTER(KIND) GREX_REGISTER_LETTER_##KIND

#define GREX_REGISTER_SUFFIX_f(BITS, REGISTERBITS) GREX_CAT(p, GREX_FP_LETTER(BITS), REGISTERBITS)
#define GREX_REGISTER_SUFFIX_i(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_REGISTER_SUFFIX_u(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_REGISTER_SUFFIX(KIND, BITS, REGISTERBITS) \
  GREX_REGISTER_SUFFIX_##KIND(BITS, REGISTERBITS)

#define GREX_SI_SUFFIX_f(BITS, REGISTERBITS) GREX_FP_SUFFIX(BITS)
#define GREX_SI_SUFFIX_i(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_SI_SUFFIX_u(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_SI_SUFFIX(KIND, BITS, REGISTERBITS) GREX_SI_SUFFIX_##KIND(BITS, REGISTERBITS)

#define GREX_SIR_SUFFIX_f(BITS, REGISTERBITS) GREX_CAT(GREX_FP_SUFFIX(BITS), REGISTERBITS)
#define GREX_SIR_SUFFIX_i(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_SIR_SUFFIX_u(BITS, REGISTERBITS) si##REGISTERBITS
#define GREX_SIR_SUFFIX(KIND, BITS, REGISTERBITS) GREX_SIR_SUFFIX_##KIND(BITS, REGISTERBITS)

#define GREX_REGISTERSUFFIX_f32
#define GREX_REGISTERSUFFIX_f64 d
#define GREX_REGISTERSUFFIX_f(BITS) GREX_REGISTERSUFFIX_f##BITS
#define GREX_REGISTERSUFFIX_i(BITS) i
#define GREX_REGISTERSUFFIX_u(BITS) i
#define GREX_REGISTERSUFFIX(KIND, BITS) GREX_REGISTERSUFFIX_##KIND(BITS)
#define GREX_REGISTER(KIND, BITS, REGISTERBITS) \
  GREX_CAT(__m##REGISTERBITS, GREX_REGISTERSUFFIX(KIND, BITS))
#define GREX_M_SUFFIX(KIND, BITS, REGISTERBITS) \
  GREX_CAT(m##REGISTERBITS, GREX_REGISTERSUFFIX(KIND, BITS))

#define GREX_EPI_SUFFIX_f(BITS) GREX_FP_SUFFIX(BITS)
#define GREX_EPI_SUFFIX_i(BITS) epi##BITS
#define GREX_EPI_SUFFIX_u(BITS) epi##BITS
#define GREX_EPI_SUFFIX(KIND, BITS) GREX_EPI_SUFFIX_##KIND(BITS)

#define GREX_EPU_SUFFIX_f(BITS) GREX_FP_SUFFIX(BITS)
#define GREX_EPU_SUFFIX_i(BITS) epi##BITS
#define GREX_EPU_SUFFIX_u(BITS) epu##BITS
#define GREX_EPU_SUFFIX(KIND, BITS) GREX_EPU_SUFFIX_##KIND(BITS)

#define GREX_EPI8_SUFFIX_f(BITS) GREX_FP_SUFFIX(BITS)
#define GREX_EPI8_SUFFIX_i(BITS) epi8
#define GREX_EPI8_SUFFIX_u(BITS) epi8
#define GREX_EPI8_SUFFIX(KIND, BITS) GREX_EPI8_SUFFIX_##KIND(BITS)

#define GREX_BITPREFIX_128 _mm
#define GREX_BITPREFIX_256 _mm256
#define GREX_BITPREFIX_512 _mm512
#define GREX_BITPREFIX(REGISTERBITS) GREX_BITPREFIX_##REGISTERBITS

#define GREX_KINDCAST_IMPL(FROMKIND, TOKIND, BITS, REGISTERBITS, X) \
  GREX_CAT(GREX_BITPREFIX(REGISTERBITS), _cast, GREX_SI_SUFFIX(FROMKIND, BITS, REGISTERBITS), _, \
           GREX_SI_SUFFIX(TOKIND, BITS, REGISTERBITS)) \
  (X)
#define GREX_KINDCAST_DUMMY(FROMKIND, TOKIND, BITS, REGISTERBITS, X) X
#define GREX_KINDCAST_ff GREX_KINDCAST_DUMMY
#define GREX_KINDCAST_fi GREX_KINDCAST_IMPL
#define GREX_KINDCAST_fu GREX_KINDCAST_IMPL
#define GREX_KINDCAST_if GREX_KINDCAST_IMPL
#define GREX_KINDCAST_ii GREX_KINDCAST_DUMMY
#define GREX_KINDCAST_iu GREX_KINDCAST_DUMMY
#define GREX_KINDCAST_uf GREX_KINDCAST_IMPL
#define GREX_KINDCAST_ui GREX_KINDCAST_DUMMY
#define GREX_KINDCAST_uu GREX_KINDCAST_DUMMY
#define GREX_KINDCAST(FROMKIND, TOKIND, BITS, REGISTERBITS, X) \
  GREX_KINDCAST_##FROMKIND##TOKIND(FROMKIND, TOKIND, BITS, REGISTERBITS, X)

#define GREX_KINDCAST_SINGLE_ff(BITS, X) X
#define GREX_KINDCAST_SINGLE_fi(BITS, X) i##BITS(X)
#define GREX_KINDCAST_SINGLE_fu(BITS, X) u##BITS(X)
#define GREX_KINDCAST_SINGLE_if(BITS, X) f##BITS(X)
#define GREX_KINDCAST_SINGLE_ii(BITS, X) X
#define GREX_KINDCAST_SINGLE_iu(BITS, X) u##BITS(X)
#define GREX_KINDCAST_SINGLE_uf(BITS, X) f##BITS(X)
#define GREX_KINDCAST_SINGLE_ui(BITS, X) i##BITS(X)
#define GREX_KINDCAST_SINGLE_uu(BITS, X) X
#define GREX_KINDCAST_SINGLE(FROMKIND, TOKIND, BITS, X) \
  GREX_KINDCAST_SINGLE_##FROMKIND##TOKIND(BITS, X)

#define GREX_BROADMASK_CONVERT_f(BITS, REGISTERBITS, X) \
  GREX_CAT(GREX_BITPREFIX(REGISTERBITS), _castsi##REGISTERBITS##_, GREX_FP_SUFFIX(BITS))(X)
#define GREX_BROADMASK_CONVERT_i(BITS, REGISTERBITS, X) X
#define GREX_BROADMASK_CONVERT_u(BITS, REGISTERBITS, X) X
#define GREX_BROADMASK_CONVERT(KIND, BITS, REGISTERBITS, X) \
  GREX_BROADMASK_CONVERT_##KIND(BITS, REGISTERBITS, X)

#define GREX_SIZEMMASK_IMPLI(MMASKSIZE) __mmask##MMASKSIZE
#define GREX_SIZEMMASK_IMPL(MMASKSIZE) GREX_SIZEMMASK_IMPLI(MMASKSIZE)
#define GREX_SIZEMMASK(SIZE) GREX_SIZEMMASK_IMPL(GREX_MAX(SIZE, 8))

#endif // INCLUDE_GREX_BACKEND_X86_MACROS_INTRINSICS_HPP
