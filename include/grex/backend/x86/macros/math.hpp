#ifndef INCLUDE_GREX_BACKEND_X86_MACROS_MATH_HPP
#define INCLUDE_GREX_BACKEND_X86_MACROS_MATH_HPP

// The only thing we need to decrement is the number of bits in an integer
#define GREX_DECR_8 7
#define GREX_DECR_16 15
#define GREX_DECR_32 31
#define GREX_DECR_64 63
#define GREX_DECR(X) GREX_DECR_##X

// Double the size of a SIMD vector
#define GREX_DOUBLE_256 512
#define GREX_DOUBLE_128 256
#define GREX_DOUBLE_32 64
#define GREX_DOUBLE_16 32
#define GREX_DOUBLE_8 16
#define GREX_DOUBLE_4 8
#define GREX_DOUBLE_2 4
#define GREX_DOUBLE(SIZE) GREX_DOUBLE_##SIZE

// Halve the size of a SIMD vector
#define GREX_HALVE_512 256
#define GREX_HALVE_256 128
#define GREX_HALVE_64 32
#define GREX_HALVE_32 16
#define GREX_HALVE_16 8
#define GREX_HALVE_8 4
#define GREX_HALVE_4 2
#define GREX_HALVE(SIZE) GREX_HALVE_##SIZE

// Divide a number of bits by eight
#define GREX_BIT2BYTE_512 64
#define GREX_BIT2BYTE_256 32
#define GREX_BIT2BYTE_128 16
#define GREX_BIT2BYTE_64 8
#define GREX_BIT2BYTE_32 4
#define GREX_BIT2BYTE_16 2
#define GREX_BIT2BYTE_8 1
#define GREX_BIT2BYTE(NUM) GREX_BIT2BYTE_##NUM

// Compute the maximum of two sizes
#define GREX_MAX_2_4 4
#define GREX_MAX_4_4 4
#define GREX_MAX_8_4 8
#define GREX_MAX_16_4 16
#define GREX_MAX(A, B) GREX_MAX_##A##_##B

// Divide the two arguments
#define GREX_ELEMENTS_128_8 16
#define GREX_ELEMENTS_128_16 8
#define GREX_ELEMENTS_128_32 4
#define GREX_ELEMENTS_128_64 2
#define GREX_ELEMENTS_256_8 32
#define GREX_ELEMENTS_256_16 16
#define GREX_ELEMENTS_256_32 8
#define GREX_ELEMENTS_256_64 4
#define GREX_ELEMENTS_512_8 64
#define GREX_ELEMENTS_512_16 32
#define GREX_ELEMENTS_512_32 16
#define GREX_ELEMENTS_512_64 8
#define GREX_ELEMENTS(REGISTERBITS, ELEMENTBITS) GREX_ELEMENTS_##REGISTERBITS##_##ELEMENTBITS

// Multiply the two arguments
#define GREX_REGISTERBITS_8_16 128
#define GREX_REGISTERBITS_8_32 256
#define GREX_REGISTERBITS_8_64 512
#define GREX_REGISTERBITS_16_8 128
#define GREX_REGISTERBITS_16_16 256
#define GREX_REGISTERBITS_16_32 512
#define GREX_REGISTERBITS_32_2 128
#define GREX_REGISTERBITS_32_4 128
#define GREX_REGISTERBITS_32_8 256
#define GREX_REGISTERBITS_32_16 512
#define GREX_REGISTERBITS_64_2 128
#define GREX_REGISTERBITS_64_4 256
#define GREX_REGISTERBITS_64_8 512
#define GREX_REGISTERBITS(BITS, SIZE) GREX_REGISTERBITS_##BITS##_##SIZE

#define GREX_PARTBITS_8_2 16
#define GREX_PARTBITS_8_4 32
#define GREX_PARTBITS_8_8 64
#define GREX_PARTBITS_8_16 128
#define GREX_PARTBITS_8_32 256
#define GREX_PARTBITS_8_64 512
#define GREX_PARTBITS_16_2 32
#define GREX_PARTBITS_16_4 64
#define GREX_PARTBITS_16_8 128
#define GREX_PARTBITS_16_16 256
#define GREX_PARTBITS_16_32 512
#define GREX_PARTBITS_32_2 64
#define GREX_PARTBITS_32_4 128
#define GREX_PARTBITS_32_8 256
#define GREX_PARTBITS_32_16 512
#define GREX_PARTBITS_64_2 128
#define GREX_PARTBITS_64_4 256
#define GREX_PARTBITS_64_8 512
#define GREX_PARTBITS_64_16 1024
#define GREX_PARTBITS(BITS, SIZE) GREX_PARTBITS_##BITS##_##SIZE

// The maximum of the argument and eight
#define GREX_MMASKSIZE_2 8
#define GREX_MMASKSIZE_4 8
#define GREX_MMASKSIZE_8 8
#define GREX_MMASKSIZE_16 16
#define GREX_MMASKSIZE_32 32
#define GREX_MMASKSIZE_64 64
#define GREX_MMASKSIZE(SIZE) GREX_MMASKSIZE_##SIZE

// Divide 128 by the argument
#define GREX_MINSIZE_8 16
#define GREX_MINSIZE_16 8
#define GREX_MINSIZE_32 4
#define GREX_MINSIZE_64 2
#define GREX_MINSIZE(BITS) GREX_MINSIZE_##BITS

#endif // INCLUDE_GREX_BACKEND_X86_MACROS_MATH_HPP
